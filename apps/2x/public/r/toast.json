{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "toast",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/toast.tsx",
      "content": "\"use client\"\n\nimport { toastManager, useToast } from \"@/hooks/use-toast\"\nimport { Toast } from \"@base-ui-components/react/toast\"\nimport {\n\tCircleAlert,\n\tCircleCheck,\n\tInfo,\n\tLoader,\n\tTriangleAlert,\n} from \"lucide-react\"\n\nimport { buttonVariants } from \"@/components/ui/button\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TOAST_ICONS: {\n\t[key: string]: React.ReactNode\n} = {\n\tloading: <Loader className=\"animate-spin\" />,\n\tsuccess: <CircleCheck />,\n\terror: <CircleAlert />,\n\tinfo: <Info />,\n\twarning: <TriangleAlert />,\n}\n\nfunction ToastProvider({\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof Toast.Provider>) {\n\treturn (\n\t\t<Toast.Provider toastManager={toastManager} {...props}>\n\t\t\t{children}\n\t\t\t<ToastList />\n\t\t</Toast.Provider>\n\t)\n}\n\nfunction ToastList() {\n\tconst { toasts } = useToast()\n\n\treturn (\n\t\t<Toast.Portal data-slot=\"toast-portal\">\n\t\t\t<Toast.Viewport\n\t\t\t\tclassName=\"fixed top-auto right-4 bottom-4 mx-auto flex w-[calc(100%_-_2rem)] sm:right-8 sm:bottom-8 sm:w-[356px]\"\n\t\t\t\tdata-slot=\"toast-viewport\"\n\t\t\t>\n\t\t\t\t{toasts.map((toast) => (\n\t\t\t\t\t<Toast.Root\n\t\t\t\t\t\tkey={toast.id}\n\t\t\t\t\t\ttoast={toast}\n\t\t\t\t\t\tswipeDirection={[\"right\", \"down\"]}\n\t\t\t\t\t\tdata-slot=\"toast\"\n\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\"bg-popover absolute right-0 bottom-0 left-auto z-[calc(1000-var(--toast-index))] mr-0 flex w-full items-center justify-between gap-1.5 rounded-lg border bg-clip-padding p-4 shadow-lg transition-all [transition-property:opacity,transform] duration-200 ease-out select-none\",\n\t\t\t\t\t\t\t\"after:absolute after:bottom-full after:left-0 after:h-[calc(var(--gap)+1px)] after:w-full after:content-['']\", // Fill the gap between toasts\n\t\t\t\t\t\t\t\"[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-swipe-movement-y)+calc(min(var(--toast-index),10)*-1*var(--gap))))_scale(calc(max(0,1-(var(--toast-index)*0.1))))]\", // Initial position and scale\n\t\t\t\t\t\t\t\"data-[expanded]:[transform:translateX(var(--toast-swipe-movement-x))_translateY(calc(var(--toast-offset-y)*-1+calc(var(--toast-index)*var(--gap)*-1)+var(--toast-swipe-movement-y)))]\", // Expanded state animation\n\t\t\t\t\t\t\t\"data-[ending-style]:opacity-0 data-[limited]:opacity-0 data-[starting-style]:[transform:translateY(150%)] data-[starting-style]:opacity-0 data-[ending-style]:[&:not([data-limited])]:[transform:translateY(150%)]\",\n\t\t\t\t\t\t\t\"data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))] data-[expanded]:data-[ending-style]:data-[swipe-direction=right]:[transform:translateX(calc(var(--toast-swipe-movement-x)+150%))_translateY(var(--offset-y))]\", // Right swipe animation\n\t\t\t\t\t\t\t\"data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))] data-[expanded]:data-[ending-style]:data-[swipe-direction=down]:[transform:translateY(calc(var(--toast-swipe-movement-y)+150%))]\", // Down swipe animation\n\t\t\t\t\t\t\ttoast.type === \"success\" &&\n\t\t\t\t\t\t\t\t\"bg-success border-success-border text-success-foreground\",\n\t\t\t\t\t\t\ttoast.type === \"error\" &&\n\t\t\t\t\t\t\t\t\"bg-danger border-danger-border text-danger-foreground\",\n\t\t\t\t\t\t\ttoast.type === \"info\" &&\n\t\t\t\t\t\t\t\t\"bg-info border-info-border text-info-foreground\",\n\t\t\t\t\t\t\ttoast.type === \"warning\" &&\n\t\t\t\t\t\t\t\t\"bg-warning border-warning-border text-warning-foreground\"\n\t\t\t\t\t\t)}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t[\"--gap\" as string]: \"0.8rem\",\n\t\t\t\t\t\t\t[\"--offset-y\" as string]:\n\t\t\t\t\t\t\t\t\"calc(var(--toast-offset-y) * -1 + (var(--toast-index) * var(--gap) * -1) + var(--toast-swipe-movement-y))\",\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"flex items-center gap-2\">\n\t\t\t\t\t\t\t{toast.type && TOAST_ICONS[toast.type] && (\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclassName=\"shrink-0 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-3.5\"\n\t\t\t\t\t\t\t\t\tdata-slot=\"toast-icon\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{TOAST_ICONS[toast.type]}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t\t\t\t\t<Toast.Title\n\t\t\t\t\t\t\t\t\tclassName=\"text-[13px] leading-relaxed font-medium\"\n\t\t\t\t\t\t\t\t\tdata-slot=\"toast-title\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Toast.Description\n\t\t\t\t\t\t\t\t\tclassName=\"text-[13px] leading-normal\"\n\t\t\t\t\t\t\t\t\tdata-slot=\"toast-description\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{toast.actionProps && (\n\t\t\t\t\t\t\t<Toast.Action\n\t\t\t\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\t\t\tbuttonVariants({ size: \"sm\" }),\n\t\t\t\t\t\t\t\t\t\"h-6 px-2 text-xs font-medium\"\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tdata-slot=\"toast-action\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{toast.actionProps.children}\n\t\t\t\t\t\t\t</Toast.Action>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Toast.Root>\n\t\t\t\t))}\n\t\t\t</Toast.Viewport>\n\t\t</Toast.Portal>\n\t)\n}\n\nexport { ToastProvider }\n",
      "type": "registry:ui",
      "target": ""
    },
    {
      "path": "src/hooks/use-toast.tsx",
      "content": "\"use client\"\n\nimport { Toast } from \"@base-ui-components/react/toast\"\n\nexport const toastManager = Toast.createToastManager()\n\nexport const useToast = Toast.useToastManager\n",
      "type": "registry:hook"
    }
  ]
}