{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/button.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { mergeProps } from \"@base-ui-components/react\"\nimport { useRender } from \"@base-ui-components/react/use-render\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n\t\"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-xs font-medium transition-all duration-200 outline-none focus-visible:ring-[3px] focus-visible:ring-ring/50 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t\"bg-primary text-primary-foreground hover:bg-primary/80 shadow-xs\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"bg-secondary text-secondary-foreground hover:bg-secondary/80 shadow-xs\",\n\t\t\t\tghost:\n\t\t\t\t\t\"text-foreground hover:bg-accent/80 hover:text-accent-foreground\",\n\t\t\t\toutline:\n\t\t\t\t\t\"border bg-transparent text-foreground hover:bg-accent/80 hover:text-accent-foreground shadow-xs\",\n\t\t\t\tlink: \"text-foreground hover:underline\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"bg-destructive text-destructive-foreground hover:bg-destructive/80 focus-visible:ring-destructive/50 shadow-xs\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tsm: \"h-8 px-3 gap-1\",\n\t\t\t\tmd: \"h-9 px-4\",\n\t\t\t\tlg: \"h-10 px-5\",\n\t\t\t\t\"icon-sm\": \"size-8 [&_svg:not([class*='size-'])]:size-3\",\n\t\t\t\ticon: \"size-9\",\n\t\t\t\t\"icon-lg\": \"size-10 [&_svg:not([class*='size-'])]:size-5\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"md\",\n\t\t},\n\t}\n)\n\nexport interface ButtonProps\n\textends VariantProps<typeof buttonVariants>,\n\t\tReact.ButtonHTMLAttributes<HTMLButtonElement>,\n\t\tuseRender.ComponentProps<\"button\"> {}\n\nfunction Button({\n\tclassName,\n\tvariant,\n\tsize,\n\trender = <button />,\n\t...props\n}: ButtonProps) {\n\tconst defaultProps = {\n\t\t\"data-slot\": \"button\",\n\t\tclassName: cn(buttonVariants({ variant, size, className })),\n\t} as const\n\n\tconst element = useRender({\n\t\trender,\n\t\tprops: mergeProps<\"button\">(defaultProps, props),\n\t})\n\n\treturn element\n}\n\nexport { Button, buttonVariants }\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}