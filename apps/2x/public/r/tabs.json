{
	"$schema": "https://ui.shadcn.com/schema/registry-item.json",
	"name": "tabs",
	"type": "registry:ui",
	"dependencies": [],
	"registryDependencies": [],
	"files": [
		{
			"path": "ui/tabs.tsx",
			"content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Tabs as BaseTabs } from \"@base-ui-components/react/tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\ntype TabsVariant = \"capsule\" | \"underline\"\n\ntype TabsContext = {\n\tvariant: TabsVariant\n}\n\nconst TabsContext = React.createContext<TabsContext | null>(null)\n\nconst useTabs = () => {\n\tconst context = React.useContext(TabsContext)\n\n\tif (!context) {\n\t\tthrow new Error(\"useTabs must be used within a Tabs\")\n\t}\n\n\treturn context\n}\n\nfunction Tabs({\n\tvariant = \"capsule\",\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof BaseTabs.Root> & {\n\tvariant?: TabsVariant\n}) {\n\treturn (\n\t\t<TabsContext.Provider value={{ variant }}>\n\t\t\t<BaseTabs.Root\n\t\t\t\tdata-slot=\"tabs\"\n\t\t\t\tclassName={cn(\"flex flex-col gap-2\", className)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</TabsContext.Provider>\n\t)\n}\n\nfunction TabsList({\n\tclassName,\n\tchildren,\n\t...props\n}: React.ComponentProps<typeof BaseTabs.List>) {\n\tconst { variant } = useTabs()\n\n\treturn (\n\t\t<BaseTabs.List\n\t\t\tdata-slot=\"tabs-list\"\n\t\t\tclassName={cn(\n\t\t\t\t\"text-muted-foreground relative z-0 inline-flex h-9 w-fit items-center justify-center gap-x-1 p-1\",\n\t\t\t\tvariant === \"capsule\" ? \"bg-muted rounded-lg\" : \"\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<TabIndicator />\n\t\t</BaseTabs.List>\n\t)\n}\n\nfunction TabsTrigger({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof BaseTabs.Tab>) {\n\treturn (\n\t\t<BaseTabs.Tab\n\t\t\tdata-slot=\"tabs-trigger\"\n\t\t\tclassName={cn(\n\t\t\t\t\"text-muted-foreground data-selected:text-foreground focus-visible:ring-ring/50 [&_svg:not([class*='size-'])] z-[1] flex-1 items-center justify-center gap-1.5 rounded-md px-2 py-1 text-sm text-nowrap whitespace-nowrap outline-none focus-visible:ring-[3px] data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nfunction TabIndicator({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof BaseTabs.Indicator>) {\n\tconst { variant } = useTabs()\n\n\treturn (\n\t\t<BaseTabs.Indicator\n\t\t\tdata-slot=\"tab-indicator\"\n\t\t\tclassName={cn(\n\t\t\t\t\"absolute left-0 w-[var(--active-tab-width)] translate-x-[var(--active-tab-left)] -translate-y-1/2 transition-all duration-300 ease-in-out\",\n\t\t\t\tvariant === \"underline\"\n\t\t\t\t\t? \"bg-primary top-full z-10 h-px\"\n\t\t\t\t\t: \"bg-accent border-ring/70 top-1/2 -z-[1] h-[var(--active-tab-height)] rounded-md border shadow-sm\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nfunction TabsContent({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof BaseTabs.Panel>) {\n\treturn (\n\t\t<BaseTabs.Panel\n\t\t\tdata-slot=\"tabs-content\"\n\t\t\tclassName={cn(\"flex-1 outline-none\", className)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n",
			"type": "registry:ui",
			"target": ""
		}
	]
}
