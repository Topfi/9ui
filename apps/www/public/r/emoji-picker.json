{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "emoji-picker",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/emoji-picker.tsx",
      "content": "import * as React from \"react\"\nimport { EmojiPicker as BaseEmojiPicker } from \"frimousse\"\nimport { Search } from \"lucide-react\"\n\nimport { InputIcon } from \"@/components/ui/input\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst EmojiPicker = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseEmojiPicker.Root>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<BaseEmojiPicker.Root\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t\"isolate flex h-80 w-fit flex-col rounded-md border bg-popover shadow-md\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n})\nEmojiPicker.displayName = \"EmojiPicker\"\n\nconst EmojiPickerSearch = React.forwardRef<\n\tHTMLInputElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseEmojiPicker.Search>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<div className=\"relative z-10 m-2\">\n\t\t\t<InputIcon side=\"leading\">\n\t\t\t\t<Search className=\"size-4\" />\n\t\t\t</InputIcon>\n\t\t\t<BaseEmojiPicker.Search\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"h-9 w-full appearance-none rounded-md border bg-input pl-10 pr-3 text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 aria-[invalid=true]:border-destructive aria-[invalid=true]:text-destructive aria-[invalid=true]:placeholder:text-destructive aria-[invalid=true]:focus:ring-destructive/50 md:text-sm\",\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</div>\n\t)\n})\nEmojiPickerSearch.displayName = \"EmojiPickerSearch\"\n\nconst EmojiPickerContent = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseEmojiPicker.Viewport>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<BaseEmojiPicker.Viewport\n\t\t\tref={ref}\n\t\t\tclassName={cn(\"relative flex-1 outline-none\", className)}\n\t\t\t{...props}\n\t\t/>\n\t)\n})\nEmojiPickerContent.displayName = \"EmojiPickerContent\"\n\nconst EmojiPickerLoading = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseEmojiPicker.Loading>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<BaseEmojiPicker.Loading\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t\"absolute inset-0 flex items-center justify-center text-sm text-muted-foreground\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n})\nEmojiPickerLoading.displayName = \"EmojiPickerLoading\"\n\nconst EmojiPickerEmpty = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseEmojiPicker.Empty>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<BaseEmojiPicker.Empty\n\t\t\tref={ref}\n\t\t\tclassName={cn(\n\t\t\t\t\"absolute inset-0 flex items-center justify-center text-sm text-muted-foreground\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n})\nEmojiPickerEmpty.displayName = \"EmojiPickerEmpty\"\n\nconst EmojiPickerList = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof BaseEmojiPicker.List>\n>(({ className, ...props }, ref) => {\n\treturn (\n\t\t<BaseEmojiPicker.List\n\t\t\tref={ref}\n\t\t\tclassName={cn(\"select-none pb-2\", className)}\n\t\t\tcomponents={{\n\t\t\t\tCategoryHeader: ({ category, ...props }) => (\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"bg-popover px-3 py-2 text-xs font-medium text-muted-foreground\"\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t>\n\t\t\t\t\t\t{category.label}\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tRow: ({ children, ...props }) => (\n\t\t\t\t\t<div className=\"scroll-my-1.5 px-2\" {...props}>\n\t\t\t\t\t\t{children}\n\t\t\t\t\t</div>\n\t\t\t\t),\n\t\t\t\tEmoji: ({ emoji, ...props }) => (\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"flex size-8 items-center justify-center rounded-md text-lg data-[active]:bg-accent\"\n\t\t\t\t\t\t{...props}\n\t\t\t\t\t>\n\t\t\t\t\t\t{emoji.emoji}\n\t\t\t\t\t</button>\n\t\t\t\t),\n\t\t\t}}\n\t\t\t{...props}\n\t\t/>\n\t)\n})\nEmojiPickerList.displayName = \"EmojiPickerList\"\n\nconst EmojiPickerSkinToneSelector = ({\n\tclassName,\n\t...props\n}: React.ComponentPropsWithoutRef<typeof BaseEmojiPicker.SkinToneSelector>) => {\n\treturn (\n\t\t<BaseEmojiPicker.SkinToneSelector\n\t\t\tclassName={cn(\n\t\t\t\t\"m-2 size-8 rounded-lg bg-popover text-lg font-medium text-muted-foreground hover:bg-accent\",\n\t\t\t\tclassName\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t)\n}\nEmojiPickerSkinToneSelector.displayName = \"EmojiPickerSkinToneSelector\"\n\nexport {\n\tEmojiPicker,\n\tEmojiPickerSearch,\n\tEmojiPickerContent,\n\tEmojiPickerLoading,\n\tEmojiPickerEmpty,\n\tEmojiPickerList,\n\tEmojiPickerSkinToneSelector,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}