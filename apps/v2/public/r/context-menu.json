{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "context-menu",
  "type": "registry:ui",
  "dependencies": [],
  "registryDependencies": [],
  "files": [
    {
      "path": "src/components/ui/context-menu.tsx",
      "content": "\"use client\"\n\nimport * as React from \"react\"\nimport { Menu } from \"@base-ui-components/react/menu\"\nimport { useControlled } from \"@base-ui-components/react/utils\"\nimport { CheckIcon, ChevronRightIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenuGroup = Menu.Group\nContextMenuGroup.displayName = \"ContextMenuGroup\"\n\nconst ContextMenuRadioGroup = Menu.RadioGroup\nContextMenuRadioGroup.displayName = \"ContextMenuRadioGroup\"\n\ntype ContextMenuContext = {\n\topen: boolean\n\tsetOpen: (open: boolean) => void\n}\n\nconst ContextMenuContext = React.createContext<ContextMenuContext | null>(null)\n\nconst useContextMenu = () => {\n\tconst context = React.useContext(ContextMenuContext)\n\n\tif (!context) {\n\t\tthrow new Error(\"useContextMenu must be used within a ContextMenuProvider\")\n\t}\n\n\treturn context\n}\n\nconst ContextMenu = ({ ...props }: Menu.Root.Props) => {\n\tconst [open, setOpen] = useControlled({\n\t\tcontrolled: props.open,\n\t\tdefault: false,\n\t\tname: \"ContextMenu\",\n\t\tstate: \"open\",\n\t})\n\n\treturn (\n\t\t<ContextMenuContext.Provider value={{ open, setOpen }}>\n\t\t\t<Menu.Root open={open} onOpenChange={setOpen} {...props} />\n\t\t</ContextMenuContext.Provider>\n\t)\n}\nContextMenu.displayName = \"ContextMenu\"\n\nconst ContextMenuContent = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.Popup>\n>(({ className, ...props }, ref) => (\n\t<Menu.Portal>\n\t\t<Menu.Positioner align=\"start\">\n\t\t\t<Menu.Popup\n\t\t\t\tref={ref}\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"min-w-48 origin-[var(--transform-origin)] rounded-md border bg-popover p-1 text-popover-foreground shadow-sm outline-none transition-[transform,scale,opacity] data-[ending-style]:scale-95 data-[starting-style]:scale-95 data-[ending-style]:opacity-0 data-[starting-style]:opacity-0 dark:shadow-none\",\n\t\t\t\t\tclassName\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t/>\n\t\t</Menu.Positioner>\n\t</Menu.Portal>\n))\nContextMenuContent.displayName = \"ContextMenuContent\"\n\nconst ContextMenuTrigger = React.forwardRef<\n\tHTMLDivElement,\n\tReact.HTMLAttributes<HTMLDivElement>\n>(({ children, className, ...props }, ref) => {\n\tconst [position, setPosition] = React.useState({ x: 0, y: 0 })\n\tconst { setOpen } = useContextMenu()\n\n\tconst handleContextMenu = (e: React.MouseEvent) => {\n\t\te.preventDefault()\n\t\tsetPosition({ x: e.clientX, y: e.clientY })\n\t\tsetOpen(true)\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tref={ref}\n\t\t\tclassName={className}\n\t\t\tonContextMenu={handleContextMenu}\n\t\t\t{...props}\n\t\t>\n\t\t\t{children}\n\t\t\t<Menu.Trigger\n\t\t\t\tstyle={{\n\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\tleft: position.x,\n\t\t\t\t\ttop: position.y,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n})\nContextMenuTrigger.displayName = \"ContextMenuTrigger\"\n\nconst ContextMenuItem = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.Item>\n>(({ className, ...props }, ref) => (\n\t<Menu.Item\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nContextMenuItem.displayName = \"ContextMenuItem\"\n\nconst ContextMenuItemShortcut = React.forwardRef<\n\tHTMLSpanElement,\n\tReact.HTMLAttributes<HTMLSpanElement>\n>(({ className, ...props }, ref) => (\n\t<span\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"ml-auto pl-10 text-xs tracking-widest text-muted-foreground\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t/>\n))\nContextMenuItemShortcut.displayName = \"ContextMenuItemShortcut\"\n\nconst ContextMenuGroupLabel = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.GroupLabel>\n>(({ className, ...props }, ref) => (\n\t<Menu.GroupLabel\n\t\tref={ref}\n\t\tclassName={cn(\"px-2 py-1.5 text-xs text-muted-foreground\", className)}\n\t\t{...props}\n\t/>\n))\nContextMenuGroupLabel.displayName = \"ContextMenuGroupLabel\"\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.CheckboxItem>\n>(({ className, children, ...props }, ref) => (\n\t<Menu.CheckboxItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<div className=\"size-4\">\n\t\t\t<Menu.CheckboxItemIndicator>\n\t\t\t\t<CheckIcon className=\"size-full\" />\n\t\t\t</Menu.CheckboxItemIndicator>\n\t\t</div>\n\t\t<span>{children}</span>\n\t</Menu.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName = \"ContextMenuCheckboxItem\"\n\nconst ContextMenuRadioItem = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.RadioItem>\n>(({ className, children, ...props }, ref) => (\n\t<Menu.RadioItem\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[highlighted]:text-accent-foreground data-[disabled]:opacity-50\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t<div className=\"size-4\">\n\t\t\t<Menu.RadioItemIndicator>\n\t\t\t\t<CheckIcon className=\"size-full\" />\n\t\t\t</Menu.RadioItemIndicator>\n\t\t</div>\n\t\t<span>{children}</span>\n\t</Menu.RadioItem>\n))\nContextMenuRadioItem.displayName = \"ContextMenuRadioItem\"\n\nconst ContextMenuSubTrigger = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.SubmenuTrigger>\n>(({ className, children, ...props }, ref) => (\n\t<Menu.SubmenuTrigger\n\t\tref={ref}\n\t\tclassName={cn(\n\t\t\t\"flex select-none items-center gap-2 rounded-md px-2 py-1.5 text-sm outline-none data-[disabled]:pointer-events-none data-[highlighted]:bg-accent data-[popup-open]:bg-accent data-[highlighted]:text-accent-foreground data-[popup-open]:text-accent-foreground data-[disabled]:opacity-50\",\n\t\t\tclassName\n\t\t)}\n\t\t{...props}\n\t>\n\t\t{children}\n\t\t<ChevronRightIcon className=\"ml-auto size-3\" />\n\t</Menu.SubmenuTrigger>\n))\nContextMenuSubTrigger.displayName = \"ContextMenuSubTrigger\"\n\nconst ContextMenuSeparator = React.forwardRef<\n\tHTMLDivElement,\n\tReact.ComponentPropsWithoutRef<typeof Menu.Separator>\n>(({ className, ...props }, ref) => (\n\t<Menu.Separator\n\t\tref={ref}\n\t\tclassName={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n\t\t{...props}\n\t/>\n))\nContextMenuSeparator.displayName = \"ContextMenuSeparator\"\n\nexport {\n\tContextMenu,\n\tContextMenuContent,\n\tContextMenuItem,\n\tContextMenuItemShortcut,\n\tContextMenuTrigger,\n\tContextMenuSeparator,\n\tContextMenuGroup,\n\tContextMenuGroupLabel,\n\tContextMenuCheckboxItem,\n\tContextMenuRadioGroup,\n\tContextMenuRadioItem,\n\tContextMenuSubTrigger,\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}